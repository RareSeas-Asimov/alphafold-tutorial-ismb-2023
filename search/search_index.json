{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cas12a Variant Structural Predictions With AlphaFold2 !!! info \"\" Presented as a Virtual Tutorial for the ISMB 2023 Meeting in Lyon, France The Intrepid Trainers Geraldine Van de Auwera, Ph.D. Adelaide Rhodes, Ph.D. Prerequisites Request a free Gmail account to enable the Colaboratory Demo Download PyMOL Schedule Workshop Schedule Note: Times are relative to the start and end times of the Tutorial 0:00:00 - 0:15:00 Introductory Lecture on the Protein Folding Problem and Artificial Intelligence Approach to the Solution 0:15:00 - 0:30:00 Introduction to the AlphaFold Tools and Database 0:30:00 - 0:45:00 Setting up Colaboratory Notebooks to run code with a free Gmail account 0:45:00 - 1:45:00 Hands On Activity Introduction to the Data Set used Introduction to the Compute Environment Introduction To Cas12a Variant Structural Predictions With AlphaFold2 Introduction to the Alphafold Command Line Parameters View the Code in the Notebooks Run Alphafold using Colaboratory Notebooks AlphaFold2 Accuracy Assessment Review Alphafold results (RELAXED vs RELAXED_GPU) Download Alphafold results 1:45:00 - 2:00:00 Coffee Break 2:00:00 - 2:20:00 Introduction to PyMoL and other Protein Viewers (e.g. Cn3D) 2:20:00 - 2:30:00 Setting up PyMoL on your own machine 2:30:00 - 3:30:00 Hands On Activity Cas12a Variant Visualization Loading files into PyMOL Picking residues to highlight Other options in PyMOL for examining the protein structure What have we learned from the visualizations? What other questions might we ask? 3:30:00 - 3:45:00 Discussion session: How can this tool be applied to your research question? 3:45:00 - 4:00:00 Wrap up Lecture on Future Directions for AI and Resources for Further Study References alphafold-for-everybody alphafold-potential-impacts ColabFold: making protein folding accessible to all OpenFold: Retraining AlphaFold2 yields new insights into its learning mechanisms and capacity for generalization DeepMind's AlphaFold 2 Explained 5 ways of using Alpha Fold 2 Acknowledgements Thank you to Tufts Research Technology and Jason Laird for contributing the seeds of this lesson on Alphafold","title":"About"},{"location":"#cas12a-variant-structural-predictions-with-alphafold2","text":"!!! info \"\" Presented as a Virtual Tutorial for the ISMB 2023 Meeting in Lyon, France","title":"Cas12a Variant Structural Predictions With AlphaFold2"},{"location":"#the-intrepid-trainers","text":"Geraldine Van de Auwera, Ph.D. Adelaide Rhodes, Ph.D.","title":"The Intrepid Trainers"},{"location":"#prerequisites","text":"Request a free Gmail account to enable the Colaboratory Demo Download PyMOL","title":"Prerequisites"},{"location":"#schedule","text":"","title":"Schedule"},{"location":"#workshop-schedule","text":"","title":"Workshop Schedule"},{"location":"#note-times-are-relative-to-the-start-and-end-times-of-the-tutorial","text":"0:00:00 - 0:15:00 Introductory Lecture on the Protein Folding Problem and Artificial Intelligence Approach to the Solution 0:15:00 - 0:30:00 Introduction to the AlphaFold Tools and Database 0:30:00 - 0:45:00 Setting up Colaboratory Notebooks to run code with a free Gmail account 0:45:00 - 1:45:00 Hands On Activity Introduction to the Data Set used Introduction to the Compute Environment Introduction To Cas12a Variant Structural Predictions With AlphaFold2 Introduction to the Alphafold Command Line Parameters View the Code in the Notebooks Run Alphafold using Colaboratory Notebooks AlphaFold2 Accuracy Assessment Review Alphafold results (RELAXED vs RELAXED_GPU) Download Alphafold results 1:45:00 - 2:00:00 Coffee Break 2:00:00 - 2:20:00 Introduction to PyMoL and other Protein Viewers (e.g. Cn3D) 2:20:00 - 2:30:00 Setting up PyMoL on your own machine 2:30:00 - 3:30:00 Hands On Activity Cas12a Variant Visualization Loading files into PyMOL Picking residues to highlight Other options in PyMOL for examining the protein structure What have we learned from the visualizations? What other questions might we ask? 3:30:00 - 3:45:00 Discussion session: How can this tool be applied to your research question? 3:45:00 - 4:00:00 Wrap up Lecture on Future Directions for AI and Resources for Further Study","title":"Note: Times are relative to the start and end times of the Tutorial"},{"location":"#references","text":"alphafold-for-everybody alphafold-potential-impacts ColabFold: making protein folding accessible to all OpenFold: Retraining AlphaFold2 yields new insights into its learning mechanisms and capacity for generalization DeepMind's AlphaFold 2 Explained 5 ways of using Alpha Fold 2","title":"References"},{"location":"#acknowledgements","text":"Thank you to Tufts Research Technology and Jason Laird for contributing the seeds of this lesson on Alphafold","title":"Acknowledgements"},{"location":"00_introduction/","text":"Cas12a Variant Structural Predictions With AlphaFold2 !!! info \"\" Presented as a Virtual Tutorial for the ISMB 2023 Meeting in Lyon, France The Intrepid Trainers Geraldine Van de Auwera, Ph.D. Adelaide Rhodes, Ph.D. Prerequisites Request a free Gmail account to enable the Colaboratory Demo Download PyMOL Schedule Workshop Schedule Note: Times are relative to the start and end times of the Tutorial 0:00:00 - 0:15:00 Introductory Lecture on the Protein Folding Problem and Artificial Intelligence Approach to the Solution 0:15:00 - 0:30:00 Introduction to the AlphaFold Tools and Database 0:30:00 - 0:45:00 Setting up Colaboratory Notebooks to run code with a free Gmail account 0:45:00 - 1:45:00 Hands On Activity Introduction to the Data Set used Introduction to the Compute Environment Introduction To Cas12a Variant Structural Predictions With AlphaFold2 Introduction to the Alphafold Command Line Parameters View the Code in the Notebooks Run Alphafold using Colaboratory Notebooks AlphaFold2 Accuracy Assessment Review Alphafold results (RELAXED vs RELAXED_GPU) Download Alphafold results 1:45:00 - 2:00:00 Coffee Break 2:00:00 - 2:20:00 Introduction to PyMoL and other Protein Viewers (e.g. Cn3D) 2:20:00 - 2:30:00 Setting up PyMoL on your own machine 2:30:00 - 3:30:00 Hands On Activity Cas12a Variant Visualization Loading files into PyMOL Picking residues to highlight Other options in PyMOL for examining the protein structure What have we learned from the visualizations? What other questions might we ask? 3:30:00 - 3:45:00 Discussion session: How can this tool be applied to your research question? 3:45:00 - 4:00:00 Wrap up Lecture on Future Directions for AI and Resources for Further Study References alphafold-for-everybody alphafold-potential-impacts ColabFold: making protein folding accessible to all OpenFold: Retraining AlphaFold2 yields new insights into its learning mechanisms and capacity for generalization DeepMind's AlphaFold 2 Explained 5 ways of using Alpha Fold 2 Acknowledgements Thank you to Tufts Research Technology and Jason Laird for contributing the seeds of this lesson on Alphafold","title":"Schedule"},{"location":"00_introduction/#cas12a-variant-structural-predictions-with-alphafold2","text":"!!! info \"\" Presented as a Virtual Tutorial for the ISMB 2023 Meeting in Lyon, France","title":"Cas12a Variant Structural Predictions With AlphaFold2"},{"location":"00_introduction/#the-intrepid-trainers","text":"Geraldine Van de Auwera, Ph.D. Adelaide Rhodes, Ph.D.","title":"The Intrepid Trainers"},{"location":"00_introduction/#prerequisites","text":"Request a free Gmail account to enable the Colaboratory Demo Download PyMOL","title":"Prerequisites"},{"location":"00_introduction/#schedule","text":"","title":"Schedule"},{"location":"00_introduction/#workshop-schedule","text":"","title":"Workshop Schedule"},{"location":"00_introduction/#note-times-are-relative-to-the-start-and-end-times-of-the-tutorial","text":"0:00:00 - 0:15:00 Introductory Lecture on the Protein Folding Problem and Artificial Intelligence Approach to the Solution 0:15:00 - 0:30:00 Introduction to the AlphaFold Tools and Database 0:30:00 - 0:45:00 Setting up Colaboratory Notebooks to run code with a free Gmail account 0:45:00 - 1:45:00 Hands On Activity Introduction to the Data Set used Introduction to the Compute Environment Introduction To Cas12a Variant Structural Predictions With AlphaFold2 Introduction to the Alphafold Command Line Parameters View the Code in the Notebooks Run Alphafold using Colaboratory Notebooks AlphaFold2 Accuracy Assessment Review Alphafold results (RELAXED vs RELAXED_GPU) Download Alphafold results 1:45:00 - 2:00:00 Coffee Break 2:00:00 - 2:20:00 Introduction to PyMoL and other Protein Viewers (e.g. Cn3D) 2:20:00 - 2:30:00 Setting up PyMoL on your own machine 2:30:00 - 3:30:00 Hands On Activity Cas12a Variant Visualization Loading files into PyMOL Picking residues to highlight Other options in PyMOL for examining the protein structure What have we learned from the visualizations? What other questions might we ask? 3:30:00 - 3:45:00 Discussion session: How can this tool be applied to your research question? 3:45:00 - 4:00:00 Wrap up Lecture on Future Directions for AI and Resources for Further Study","title":"Note: Times are relative to the start and end times of the Tutorial"},{"location":"00_introduction/#references","text":"alphafold-for-everybody alphafold-potential-impacts ColabFold: making protein folding accessible to all OpenFold: Retraining AlphaFold2 yields new insights into its learning mechanisms and capacity for generalization DeepMind's AlphaFold 2 Explained 5 ways of using Alpha Fold 2","title":"References"},{"location":"00_introduction/#acknowledgements","text":"Thank you to Tufts Research Technology and Jason Laird for contributing the seeds of this lesson on Alphafold","title":"Acknowledgements"},{"location":"02_AlphaFold2_Accuracy_Assessment/","text":"AlphaFold2 Accuracy Assessment We can assess the accuracy of the AlphaFold prediction using: Predicted Local Distance Difference Test (pLDDT) Predicted Alignment Error Predicted Local Distance Difference Test (pLDDT) per-residue confidence metric ranging from 0-100 (100 being the highest confidence) Regions below 50 could indicate disordered regions Predicted Alignment Error (PAE) The Predicted Alignment Error (PAE) gives us an expected distance error based on each residue. If we are more confident that the distance between two residues is accurate, then the PAE is lower (darker green). If we are less confident that the distance between two residues is accurate, the PAE is higher (lighter green) Set Up For Analysis To get our AlphaFold data we will enter: #code being updated in the notebook Now let's go into this folder with the following command: #code being updated in the notebook Given that AlphaFold2 can take anywhere from a few hours to a few days to run - AlphaFold2 predictions have already been generated for the Cas12a-CWF mutants from our study. We will use a script from the VIB Bioinformatics Core to visualize the accuracy of AlphaFold2's predictions. First we will need to load the software needed to run that script: #code being updated in the notebook Now we will need to feed our script three arguments: --input_dir input directory with model files --output_dir output directory to put our plots of model information --name optional prefix to add to our file names #code being updated in the notebook python af2_accuracy_viz.py --input_dir mut2cwf/5XUS_mut2cwf --output_dir ./ --name mut2cwf Running this will generate two images in your current directory: mut2cwf_coverage_LDDT.png - plots of your msa coverage and pLDDT scores per residue per model mut2cwf_PAE.png - plots of your predicted alignment error The following is are the pLDDT and PAE scores for the Cas12a-CWF mutant: You'll note that for the pLDDT plots, that the multiple sequence alignment is plotted with a bar on the side to tell you how similar those sequences were to your query sequence (in this case each of the Cas12a-CWF mutant) ??? question \"Do you see a region in the MSA plot that seems more conserved? How about less conserved?\" ??? question \"How does this coverage seem to affect the confidence in each residues position in the pLDDT plots? \"","title":"AlphaFold2 Acuracy Assessment"},{"location":"02_AlphaFold2_Accuracy_Assessment/#alphafold2-accuracy-assessment","text":"We can assess the accuracy of the AlphaFold prediction using: Predicted Local Distance Difference Test (pLDDT) Predicted Alignment Error","title":"AlphaFold2 Accuracy Assessment"},{"location":"02_AlphaFold2_Accuracy_Assessment/#predicted-local-distance-difference-test-plddt","text":"per-residue confidence metric ranging from 0-100 (100 being the highest confidence) Regions below 50 could indicate disordered regions","title":"Predicted Local Distance Difference Test (pLDDT)"},{"location":"02_AlphaFold2_Accuracy_Assessment/#predicted-alignment-error-pae","text":"The Predicted Alignment Error (PAE) gives us an expected distance error based on each residue. If we are more confident that the distance between two residues is accurate, then the PAE is lower (darker green). If we are less confident that the distance between two residues is accurate, the PAE is higher (lighter green)","title":"Predicted Alignment Error (PAE)"},{"location":"02_AlphaFold2_Accuracy_Assessment/#set-up-for-analysis","text":"To get our AlphaFold data we will enter: #code being updated in the notebook Now let's go into this folder with the following command: #code being updated in the notebook Given that AlphaFold2 can take anywhere from a few hours to a few days to run - AlphaFold2 predictions have already been generated for the Cas12a-CWF mutants from our study. We will use a script from the VIB Bioinformatics Core to visualize the accuracy of AlphaFold2's predictions. First we will need to load the software needed to run that script: #code being updated in the notebook Now we will need to feed our script three arguments: --input_dir input directory with model files --output_dir output directory to put our plots of model information --name optional prefix to add to our file names #code being updated in the notebook python af2_accuracy_viz.py --input_dir mut2cwf/5XUS_mut2cwf --output_dir ./ --name mut2cwf Running this will generate two images in your current directory: mut2cwf_coverage_LDDT.png - plots of your msa coverage and pLDDT scores per residue per model mut2cwf_PAE.png - plots of your predicted alignment error The following is are the pLDDT and PAE scores for the Cas12a-CWF mutant: You'll note that for the pLDDT plots, that the multiple sequence alignment is plotted with a bar on the side to tell you how similar those sequences were to your query sequence (in this case each of the Cas12a-CWF mutant) ??? question \"Do you see a region in the MSA plot that seems more conserved? How about less conserved?\" ??? question \"How does this coverage seem to affect the confidence in each residues position in the pLDDT plots? \"","title":"Set Up For Analysis"},{"location":"03_Cas12a_Variant_Visualization/","text":"Cas12a Variant Visualization In the previous slide we plotted our MSA alignment, the pLDDT scores, and the predicted alignement error. However, it is also useful to visualize the actual predicted protein structure and compare it to the known structure if there is one. Here we use a software called PyMOL to do just that: Here we see that PyMOL takes either the PDB ID or a PDB file and creates a vizualization for us to examine. If you have not done so already please download PyMOL {:target=\"_blank\" rel=\"noopener\"} and open the app. You should see a window like the follwing: Here we have a: History Window with log of previous commands Command Interface to enter PyMOL commands List of Objects Loaded which list of objects/proteins that have been loaded into PyMOL Visualization Window to visualize protiens loaded into PyMOL Let's try on our data! Download AlphaFold Output First we will need to download our predicted structure pdb file for the mutant, Cas12a mut2-CWF. To this, go to Files > Home Directory : code being updated in the notebook Now, click on cas12a_af2 and download the following file, mut2cwf.pdb : code being updated in the notebook Importing Structures To visualize this protein structure in PyMOL, open PyMOL on your computer Go to File > Open - then choose your pdb file. The file we have loaded is the Cas12a-CWF mutant, let's fetch the structure for the wild type Cas12a protein: #code being updated in the notebook fetch 5xus We will now align this structure with the Cas12a-CWF mutant. So in the PyMOL command prompt enter: #code being updated in the notebook align mut2cwf, 5xus Viewing/Coloring Structures To view one structure at a time, you can use the disable command to hide one of the structures: #code being updated in the notebook disable 5xus To see this structure again we can simply use the enable command: #code being updated in the notebook enable 5xus To change the color of our structures we can use the following command: #code being updated in the notebook color lightblue, 5xus #code being updated in the notebook color salmon, mut2cwf Visualizing Variants Now that we have aligned/colored our structures, let's select residues on the RuvC Domain on the Cas12a mut2-CWF and the Cas12a wild-type: #code being updated in the notebook select resi 863+952+965+1214 and name CA !!! note Note we are only selecting the alpha carbons so that when we label these residues we only have one label per residue To label these residues we can use the following: #code being updated in the notebook label sele, \" %s%s\" % (resn,resi) With these residues selected we can color them to visualize them easier: #code being updated in the notebook color red, sele Let's now zoom into this region: #code being updated in the notebook zoom sele To capture this image we can go to File > Export Image As > PNG... > Save PNG image as ... and enter a name for your image! Alternatively, you can take a screen shot and save. ??? question \"Can you spot any disordered regions that AlphaFold2 may not have predicted well? Include an image displaying one of these regions. \" ??? question \" Ma et al. 2022 note that the Cas12a mut2-CWF has a more open active site than the wild type Cas12a. Disable the Cas12a mut2-CWF mutant and include an image of the wild type Cas12a. Then enable Cas12a mut2-CWF mutant, disable the wild type Cas12a and include an image of the Cas12a mut2-CWF mutant. Do you agree that the catalytic site appears more open in comparison to the wild type structure (5xus)?\"","title":"PyMOL Visualization"},{"location":"03_Cas12a_Variant_Visualization/#cas12a-variant-visualization","text":"In the previous slide we plotted our MSA alignment, the pLDDT scores, and the predicted alignement error. However, it is also useful to visualize the actual predicted protein structure and compare it to the known structure if there is one. Here we use a software called PyMOL to do just that: Here we see that PyMOL takes either the PDB ID or a PDB file and creates a vizualization for us to examine. If you have not done so already please download PyMOL {:target=\"_blank\" rel=\"noopener\"} and open the app. You should see a window like the follwing: Here we have a: History Window with log of previous commands Command Interface to enter PyMOL commands List of Objects Loaded which list of objects/proteins that have been loaded into PyMOL Visualization Window to visualize protiens loaded into PyMOL Let's try on our data!","title":"Cas12a Variant Visualization"},{"location":"03_Cas12a_Variant_Visualization/#download-alphafold-output","text":"First we will need to download our predicted structure pdb file for the mutant, Cas12a mut2-CWF. To this, go to Files > Home Directory :","title":"Download AlphaFold Output"},{"location":"03_Cas12a_Variant_Visualization/#code-being-updated-in-the-notebook","text":"Now, click on cas12a_af2 and download the following file, mut2cwf.pdb :","title":"code being updated in the notebook"},{"location":"03_Cas12a_Variant_Visualization/#code-being-updated-in-the-notebook_1","text":"","title":"code being updated in the notebook"},{"location":"03_Cas12a_Variant_Visualization/#importing-structures","text":"To visualize this protein structure in PyMOL, open PyMOL on your computer Go to File > Open - then choose your pdb file. The file we have loaded is the Cas12a-CWF mutant, let's fetch the structure for the wild type Cas12a protein: #code being updated in the notebook fetch 5xus We will now align this structure with the Cas12a-CWF mutant. So in the PyMOL command prompt enter: #code being updated in the notebook align mut2cwf, 5xus","title":"Importing Structures"},{"location":"03_Cas12a_Variant_Visualization/#viewingcoloring-structures","text":"To view one structure at a time, you can use the disable command to hide one of the structures: #code being updated in the notebook disable 5xus To see this structure again we can simply use the enable command: #code being updated in the notebook enable 5xus To change the color of our structures we can use the following command: #code being updated in the notebook color lightblue, 5xus #code being updated in the notebook color salmon, mut2cwf","title":"Viewing/Coloring Structures"},{"location":"03_Cas12a_Variant_Visualization/#visualizing-variants","text":"Now that we have aligned/colored our structures, let's select residues on the RuvC Domain on the Cas12a mut2-CWF and the Cas12a wild-type: #code being updated in the notebook select resi 863+952+965+1214 and name CA !!! note Note we are only selecting the alpha carbons so that when we label these residues we only have one label per residue To label these residues we can use the following: #code being updated in the notebook label sele, \" %s%s\" % (resn,resi) With these residues selected we can color them to visualize them easier: #code being updated in the notebook color red, sele Let's now zoom into this region: #code being updated in the notebook zoom sele To capture this image we can go to File > Export Image As > PNG... > Save PNG image as ... and enter a name for your image! Alternatively, you can take a screen shot and save. ??? question \"Can you spot any disordered regions that AlphaFold2 may not have predicted well? Include an image displaying one of these regions. \" ??? question \" Ma et al. 2022 note that the Cas12a mut2-CWF has a more open active site than the wild type Cas12a. Disable the Cas12a mut2-CWF mutant and include an image of the wild type Cas12a. Then enable Cas12a mut2-CWF mutant, disable the wild type Cas12a and include an image of the Cas12a mut2-CWF mutant. Do you agree that the catalytic site appears more open in comparison to the wild type structure (5xus)?\"","title":"Visualizing Variants"},{"location":"03_Cas12a_Variant_Vizualization/","text":"Cas12a Variant Visualization In the previous slide we plotted our MSA alignment, the pLDDT scores, and the predicted alignement error. However, it is also useful to visualize the actual predicted protein structure and compare it to the known structure if there is one. Here we use a software called PyMOL to do just that: Here we see that PyMOL takes either the PDB ID or a PDB file and creates a vizualization for us to examine. If you have not done so already please download PyMOL {:target=\"_blank\" rel=\"noopener\"} and open the app. You should see a window like the follwing: Here we have a: History Window with log of previous commands Command Interface to enter PyMOL commands List of Objects Loaded which list of objects/proteins that have been loaded into PyMOL Visualization Window to visualize protiens loaded into PyMOL Let's try on our data! Download AlphaFold Output First we will need to download our predicted structure pdb file for the mutant, Cas12a mut2-CWF. To this, go to Files > Home Directory : code being updated in the notebook Now, click on cas12a_af2 and download the following file, mut2cwf.pdb : code being updated in the notebook Importing Structures To visualize this protein structure in PyMOL, open PyMOL on your computer Go to File > Open - then choose your pdb file. The file we have loaded is the Cas12a-CWF mutant, let's fetch the structure for the wild type Cas12a protein: #code being updated in the notebook fetch 5xus We will now align this structure with the Cas12a-CWF mutant. So in the PyMOL command prompt enter: #code being updated in the notebook align mut2cwf, 5xus Viewing/Coloring Structures To view one structure at a time, you can use the disable command to hide one of the structures: #code being updated in the notebook disable 5xus To see this structure again we can simply use the enable command: #code being updated in the notebook enable 5xus To change the color of our structures we can use the following command: #code being updated in the notebook color lightblue, 5xus #code being updated in the notebook color salmon, mut2cwf Visualizing Variants Now that we have aligned/colored our structures, let's select residues on the RuvC Domain on the Cas12a mut2-CWF and the Cas12a wild-type: #code being updated in the notebook select resi 863+952+965+1214 and name CA !!! note Note we are only selecting the alpha carbons so that when we label these residues we only have one label per residue To label these residues we can use the following: #code being updated in the notebook label sele, \" %s%s\" % (resn,resi) With these residues selected we can color them to visualize them easier: #code being updated in the notebook color red, sele Let's now zoom into this region: #code being updated in the notebook zoom sele To capture this image we can go to File > Export Image As > PNG... > Save PNG image as ... and enter a name for your image! Alternatively, you can take a screen shot and save. ??? question \"Can you spot any disordered regions that AlphaFold2 may not have predicted well? Include an image displaying one of these regions. \" ??? question \" Ma et al. 2022 note that the Cas12a mut2-CWF has a more open active site than the wild type Cas12a. Disable the Cas12a mut2-CWF mutant and include an image of the wild type Cas12a. Then enable Cas12a mut2-CWF mutant, disable the wild type Cas12a and include an image of the Cas12a mut2-CWF mutant. Do you agree that the catalytic site appears more open in comparison to the wild type structure (5xus)?\"","title":"03 Cas12a Variant Vizualization"},{"location":"03_Cas12a_Variant_Vizualization/#cas12a-variant-visualization","text":"In the previous slide we plotted our MSA alignment, the pLDDT scores, and the predicted alignement error. However, it is also useful to visualize the actual predicted protein structure and compare it to the known structure if there is one. Here we use a software called PyMOL to do just that: Here we see that PyMOL takes either the PDB ID or a PDB file and creates a vizualization for us to examine. If you have not done so already please download PyMOL {:target=\"_blank\" rel=\"noopener\"} and open the app. You should see a window like the follwing: Here we have a: History Window with log of previous commands Command Interface to enter PyMOL commands List of Objects Loaded which list of objects/proteins that have been loaded into PyMOL Visualization Window to visualize protiens loaded into PyMOL Let's try on our data!","title":"Cas12a Variant Visualization"},{"location":"03_Cas12a_Variant_Vizualization/#download-alphafold-output","text":"First we will need to download our predicted structure pdb file for the mutant, Cas12a mut2-CWF. To this, go to Files > Home Directory :","title":"Download AlphaFold Output"},{"location":"03_Cas12a_Variant_Vizualization/#code-being-updated-in-the-notebook","text":"Now, click on cas12a_af2 and download the following file, mut2cwf.pdb :","title":"code being updated in the notebook"},{"location":"03_Cas12a_Variant_Vizualization/#code-being-updated-in-the-notebook_1","text":"","title":"code being updated in the notebook"},{"location":"03_Cas12a_Variant_Vizualization/#importing-structures","text":"To visualize this protein structure in PyMOL, open PyMOL on your computer Go to File > Open - then choose your pdb file. The file we have loaded is the Cas12a-CWF mutant, let's fetch the structure for the wild type Cas12a protein: #code being updated in the notebook fetch 5xus We will now align this structure with the Cas12a-CWF mutant. So in the PyMOL command prompt enter: #code being updated in the notebook align mut2cwf, 5xus","title":"Importing Structures"},{"location":"03_Cas12a_Variant_Vizualization/#viewingcoloring-structures","text":"To view one structure at a time, you can use the disable command to hide one of the structures: #code being updated in the notebook disable 5xus To see this structure again we can simply use the enable command: #code being updated in the notebook enable 5xus To change the color of our structures we can use the following command: #code being updated in the notebook color lightblue, 5xus #code being updated in the notebook color salmon, mut2cwf","title":"Viewing/Coloring Structures"},{"location":"03_Cas12a_Variant_Vizualization/#visualizing-variants","text":"Now that we have aligned/colored our structures, let's select residues on the RuvC Domain on the Cas12a mut2-CWF and the Cas12a wild-type: #code being updated in the notebook select resi 863+952+965+1214 and name CA !!! note Note we are only selecting the alpha carbons so that when we label these residues we only have one label per residue To label these residues we can use the following: #code being updated in the notebook label sele, \" %s%s\" % (resn,resi) With these residues selected we can color them to visualize them easier: #code being updated in the notebook color red, sele Let's now zoom into this region: #code being updated in the notebook zoom sele To capture this image we can go to File > Export Image As > PNG... > Save PNG image as ... and enter a name for your image! Alternatively, you can take a screen shot and save. ??? question \"Can you spot any disordered regions that AlphaFold2 may not have predicted well? Include an image displaying one of these regions. \" ??? question \" Ma et al. 2022 note that the Cas12a mut2-CWF has a more open active site than the wild type Cas12a. Disable the Cas12a mut2-CWF mutant and include an image of the wild type Cas12a. Then enable Cas12a mut2-CWF mutant, disable the wild type Cas12a and include an image of the Cas12a mut2-CWF mutant. Do you agree that the catalytic site appears more open in comparison to the wild type structure (5xus)?\"","title":"Visualizing Variants"},{"location":"images/test/","text":"","title":"Test"}]}